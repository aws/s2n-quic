---
source: netbench/netbench/src/scenario/builder/tests.rs
assertion_line: 86
expression: "scenario(|scenario|\n             {\n                 let server = scenario.create_server();\n                 scenario.create_client(|client|\n                                            {\n                                                client.connect_to(server,\n                                                                  |conn|\n                                                                      {\n                                                                          let (b_park,\n                                                                               b_unpark) =\n                                                                              conn.checkpoint();\n                                                                          conn.concurrently(|conn|\n                                                                                                {\n                                                                                                    conn.open_bidirectional_stream(|local|\n                                                                                                                                       {\n                                                                                                                                           local.concurrently(|sender|\n                                                                                                                                                                  {\n                                                                                                                                                                      sender.set_send_rate(1024.bytes()\n                                                                                                                                                                                               /\n                                                                                                                                                                                               50.millis());\n                                                                                                                                                                      sender.send(1.megabytes());\n                                                                                                                                                                  },\n                                                                                                                                                              |receiver|\n                                                                                                                                                                  {\n                                                                                                                                                                      receiver.receive_all();\n                                                                                                                                                                  });\n                                                                                                                                           local.unpark(b_unpark);\n                                                                                                                                       },\n                                                                                                                                   |peer|\n                                                                                                                                       {\n                                                                                                                                           peer.sleep(100.millis());\n                                                                                                                                           peer.set_receive_rate(1024.bytes()\n                                                                                                                                                                     /\n                                                                                                                                                                     50.millis());\n                                                                                                                                           peer.receive(100.kilobytes());\n                                                                                                                                           peer.set_receive_rate(10.bytes()\n                                                                                                                                                                     /\n                                                                                                                                                                     50.millis());\n                                                                                                                                           peer.receive_all();\n                                                                                                                                           peer.send(2.megabytes());\n                                                                                                                                       });\n                                                                                                },\n                                                                                            |conn|\n                                                                                                {\n                                                                                                    conn.open_send_stream(|local|\n                                                                                                                              {\n                                                                                                                                  local.park(b_park);\n                                                                                                                                  local.send(1.megabytes());\n                                                                                                                              },\n                                                                                                                          |peer|\n                                                                                                                              {\n                                                                                                                                  peer.receive(1.megabytes());\n                                                                                                                              });\n                                                                                                });\n                                                                      });\n                                            });\n             })"

---
{
  "id": "",
  "clients": [
    {
      "scenario": [
        {
          "connect": {
            "server_id": 0,
            "server_connection_id": 0,
            "client_connection_id": 0
          }
        }
      ],
      "connections": [
        {
          "ops": [
            {
              "scope": {
                "threads": [
                  [
                    {
                      "open_bidirectional_stream": {
                        "stream_id": 0
                      }
                    },
                    {
                      "scope": {
                        "threads": [
                          [
                            {
                              "send_rate": {
                                "stream_id": 0,
                                "bytes": 1024,
                                "period_ms": 50
                              }
                            },
                            {
                              "send": {
                                "stream_id": 0,
                                "bytes": 1000000
                              }
                            }
                          ],
                          [
                            {
                              "receive_all": {
                                "stream_id": 0
                              }
                            }
                          ]
                        ]
                      }
                    },
                    {
                      "unpark": {
                        "checkpoint": 0
                      }
                    },
                    {
                      "send_finish": {
                        "stream_id": 0
                      }
                    },
                    {
                      "receive_finish": {
                        "stream_id": 0
                      }
                    }
                  ],
                  [
                    {
                      "open_send_stream": {
                        "stream_id": 1
                      }
                    },
                    {
                      "park": {
                        "checkpoint": 0
                      }
                    },
                    {
                      "send": {
                        "stream_id": 1,
                        "bytes": 1000000
                      }
                    },
                    {
                      "send_finish": {
                        "stream_id": 1
                      }
                    }
                  ]
                ]
              }
            }
          ]
        }
      ],
      "certificate_authorities": [
        0
      ]
    }
  ],
  "servers": [
    {
      "connections": [
        {
          "peer_streams": [
            [
              {
                "sleep": {
                  "amount_ms": 100
                }
              },
              {
                "receive_rate": {
                  "stream_id": 0,
                  "bytes": 1024,
                  "period_ms": 50
                }
              },
              {
                "receive": {
                  "stream_id": 0,
                  "bytes": 100000
                }
              },
              {
                "receive_rate": {
                  "stream_id": 0,
                  "bytes": 10,
                  "period_ms": 50
                }
              },
              {
                "receive_all": {
                  "stream_id": 0
                }
              },
              {
                "send": {
                  "stream_id": 0,
                  "bytes": 2000000
                }
              },
              {
                "send_finish": {
                  "stream_id": 0
                }
              },
              {
                "receive_finish": {
                  "stream_id": 0
                }
              }
            ],
            [
              {
                "receive": {
                  "stream_id": 1,
                  "bytes": 1000000
                }
              },
              {
                "receive_finish": {
                  "stream_id": 1
                }
              }
            ]
          ]
        }
      ],
      "private_key": 1,
      "certificate": 2,
      "certificate_authority": 0
    }
  ]
}
