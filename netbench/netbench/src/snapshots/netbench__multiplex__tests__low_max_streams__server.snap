---
source: netbench/src/multiplex.rs
assertion_line: 598
expression: server_trace.as_str().unwrap()

---
0:00:00.000001: 1:accept: stream=0
0:00:00.000001: 1:1.0:exec: Receive { stream_id: 0, bytes: Byte(1000) }
0:00:00.000001: 1:1.0:recv: stream=0, len=500
0:00:00.000001: 1:accept: stream=1
0:00:00.000001: 1:1.1:exec: Receive { stream_id: 1, bytes: Byte(1000) }
0:00:00.000001: 1:1.1:recv: stream=1, len=500
0:00:00.050001: 1:1.0:recv: stream=0, len=500
0:00:00.050001: 1:1.0:exec: ReceiveFinish { stream_id: 0 }
0:00:00.050001: 1:1.0:recv finish: stream=0
0:00:00.050001: 1:1.1:recv: stream=1, len=500
0:00:00.050001: 1:1.1:exec: ReceiveFinish { stream_id: 1 }
0:00:00.050001: 1:1.1:recv finish: stream=1
0:00:00.050001: 1:accept: stream=2
0:00:00.050001: 1:1.2:exec: Receive { stream_id: 2, bytes: Byte(1000) }
0:00:00.050001: 1:1.2:recv: stream=2, len=500
0:00:00.050001: 1:accept: stream=3
0:00:00.050001: 1:1.3:exec: Receive { stream_id: 3, bytes: Byte(1000) }
0:00:00.050001: 1:1.3:recv: stream=3, len=500
0:00:00.100001: 1:1.2:recv: stream=2, len=500
0:00:00.100001: 1:1.2:exec: ReceiveFinish { stream_id: 2 }
0:00:00.100001: 1:1.2:recv finish: stream=2
0:00:00.100001: 1:1.3:recv: stream=3, len=500
0:00:00.100001: 1:1.3:exec: ReceiveFinish { stream_id: 3 }
0:00:00.100001: 1:1.3:recv finish: stream=3

