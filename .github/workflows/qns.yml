on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: qns

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  RUST_BACKTRACE: 1
  # This kept breaking builds so we're pinning for now. We should do our best to keep
  # up with the changes, though.
  INTEROP_RUNNER_REF: 37c7eb05402c43ad1d7daa0e1c903db80f6478b9
  # This should be updated when updating wesleyrosenblum/quic-network-simulator
  NETWORK_SIMULATOR_REF: sha256:20abe0bed8c0e39e1d8750507b24295f7c978bdd7e05fa6f3a5afed4b76dc191
  IPERF_ENDPOINT_REF: sha256:cb50cc8019d45d9cad5faecbe46a3c21dd5e871949819a5175423755a9045106
  WIRESHARK_VERSION: 3.4.9
  CDN: https://dnglbrstg7yg.cloudfront.net
  LOG_URL: logs/latest/SERVER_CLIENT/TEST/index.html
  H3_SPEC_VERSION: v0.1.8
  QUINN_REF: 730fdaf723eef125c175fbcdba1ac3fe3324f7ce

jobs:
  env:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.implementations.outputs.matrix }}
    steps:
      - uses: ouzi-dev/commit-status-updater@v1.1.2
        with:
          name: 'interop / report'
          status: 'pending'

      - uses: actions/checkout@v2
        with:
          path: s2n-quic

      - uses: actions/checkout@v2
        with:
          repository: marten-seemann/quic-interop-runner
          ref: ${{ env.INTEROP_RUNNER_REF }}
          path: quic-interop-runner

      - name: Patch quic-interop-runner
        working-directory: quic-interop-runner
        run: |
          git apply --3way ../s2n-quic/.github/interop/runner.patch

      - name: Define implementations
        id: implementations
        working-directory: quic-interop-runner
        run: |
          CLIENTS=$(cat implementations.json \
            | jq -c '[. | to_entries[] | select(.value.role == "both" or .value.role == "client") | {"client": .key, "server": "s2n-quic"}] | sort'
          )
          echo "Clients: $CLIENTS"
          SERVERS=$(cat implementations.json \
            | jq -c '[. | to_entries[] | select(.value.role == "both" or .value.role == "server") | {"client": "s2n-quic", "server": .key}] | sort'
          )
          echo "Servers: $SERVERS"
          IMPLEMENTATIONS=$(echo [$CLIENTS, $SERVERS] | jq -c 'flatten | sort | unique')
          # IMPLEMENTATIONS='\"[{\"client\":\"aioquic\",\"server\":\"s2n-quic\"}]\"'
          echo $IMPLEMENTATIONS
          echo "::set-output name=matrix::$IMPLEMENTATIONS"

  log:
    runs-on: ubuntu-latest
    needs: [env]
    steps:
      - name: print env
        working-directory: log
        run: |
          echo "print something"
          echo "${{ needs.env.outputs.matrix }}"
          # echo "${{ toJSON(needs.env.outputs.matrix) }}"
          # echo "${{ fromJson(needs.env.outputs.matrix) }}"

  interop:
    runs-on: ubuntu-latest
    needs: [env]
    strategy:
      matrix:
        # tls: ["s2n-tls", "rustls"]
        # include: [{"client":"aioquic","server":"s2n-quic"},{"client":"chrome","server":"s2n-quic"}]
        # include:
        #   - client: "aioquic"
        #     server: "s2n-quic"
        #   - client: "chrome"
        #     server: "s2n-quic"
        include: ${{ fromJson(needs.env.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
        with:
          path: s2n-quic

      - uses: actions/download-artifact@v2
        with:
          name: s2n-quic-qns-debug
          path: s2n-quic-qns/

      - name: Set tls env
        run: |
          echo "${{ needs.env.outputs.bla }}"
          echo "${{ toJSON(needs.env.outputs.bla) }}"
          # echo "${{ matrix.tls }}"
          # echo "$TLS=${{ matrix.tls }}" >> $GITHUB_ENV


