on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: qns

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  RUST_BACKTRACE: 1
  # This kept breaking builds so we're pinning for now. We should do our best to keep
  # up with the changes, though.
  INTEROP_RUNNER_REF: 37c7eb05402c43ad1d7daa0e1c903db80f6478b9
  # This should be updated when updating wesleyrosenblum/quic-network-simulator
  NETWORK_SIMULATOR_REF: sha256:20abe0bed8c0e39e1d8750507b24295f7c978bdd7e05fa6f3a5afed4b76dc191
  IPERF_ENDPOINT_REF: sha256:cb50cc8019d45d9cad5faecbe46a3c21dd5e871949819a5175423755a9045106
  WIRESHARK_VERSION: 3.4.9
  CDN: https://dnglbrstg7yg.cloudfront.net
  LOG_URL: logs/latest/SERVER_CLIENT/TEST/index.html
  H3_SPEC_VERSION: v0.1.8
  QUINN_REF: 730fdaf723eef125c175fbcdba1ac3fe3324f7ce

jobs:
  env:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.implementations.outputs.matrix }}
    steps:
      - uses: ouzi-dev/commit-status-updater@v1.1.2
        with:
          name: 'interop / report'
          status: 'pending'

      - uses: ouzi-dev/commit-status-updater@v1.1.2
        with:
          name: 'bench / report'
          status: 'pending'

      - uses: actions/checkout@v2
        with:
          path: s2n-quic

      - uses: actions/checkout@v2
        with:
          repository: marten-seemann/quic-interop-runner
          ref: ${{ env.INTEROP_RUNNER_REF }}
          path: quic-interop-runner

      - name: Patch quic-interop-runner
        working-directory: quic-interop-runner
        run: |
          git apply --3way ../s2n-quic/.github/interop/runner.patch

      - name: Define implementations
        id: implementations
        working-directory: quic-interop-runner
        run: |
          CLIENTS=$(cat implementations.json \
            | jq -c '[. | to_entries[] | select(.value.role == "both" or .value.role == "client") | {"client": .key, "server": "s2n-quic"}] | sort'
          )
          echo "Clients: $CLIENTS"
          SERVERS=$(cat implementations.json \
            | jq -c '[. | to_entries[] | select(.value.role == "both" or .value.role == "server") | {"client": "s2n-quic", "server": .key}] | sort'
          )
          echo "Servers: $SERVERS"
          MATRIX=$(echo "[$CLIENTS, $SERVERS]" | jq -c '{"include": . | flatten | sort | unique}')
          echo "Matrix: $MATRIX"
          echo "::set-output name=matrix::$MATRIX"

  s2n-quic-qns:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mode: ["debug"]
    # enable debug information
    env:
      RUSTFLAGS: "-g"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: actions-rs/toolchain@v1.0.7
        id: toolchain
        with:
          toolchain: stable
          profile: minimal
          override: true

      - uses: camshaft/rust-cache@v1
        with:
          key: ${{ matrix.mode }}-${{ env.RUSTFLAGS }}

      - name: Run cargo build
        uses: actions-rs/cargo@v1.0.3
        with:
          command: build
          args: --bin s2n-quic-qns ${{ matrix.mode == 'release' && '--release' || '' }}

      - name: Prepare artifact
        run: |
          mkdir -p s2n-quic-qns
          cp target/${{ matrix.mode }}/s2n-quic-qns s2n-quic-qns/s2n-quic-qns-${{ matrix.mode }}

      - uses: actions/upload-artifact@v2
        with:
          name: s2n-quic-qns-${{ matrix.mode }}
          path: s2n-quic-qns/

  h3spec:
    runs-on: ubuntu-latest
    needs: [s2n-quic-qns]

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: s2n-quic-qns-debug

      - name: Install h3spec
        run: |
          curl -L -o h3spec https://github.com/kazu-yamamoto/h3spec/releases/download/$H3_SPEC_VERSION/h3spec-linux-x86_64
          chmod +x h3spec
          chmod +x s2n-quic-qns-debug

      - name: Run test
        # the skipped tests here require modifications to the TLS library
        # TODO remove the skips once these are fixed
        #      https://github.com/awslabs/s2n-quic/issues/858
        #      https://github.com/awslabs/s2n-quic/issues/859
        run: |
          ./s2n-quic-qns-debug interop server --port 4433 &
          # wait for the server to boot
          sleep 3
          ./h3spec localhost 4433 \
            --match "MUST send TRANSPORT_PARAMETER_ERROR if initial_source_connection_id is missing [Transport 7.3]" \
            # --match "MUST send TRANSPORT_PARAMETER_ERROR if original_destination_connection_id is received [Transport 18.2]" \
            # --match "MUST send TRANSPORT_PARAMETER_ERROR if preferred_address, is received [Transport 18.2]" \
            # --match "MUST send TRANSPORT_PARAMETER_ERROR if retry_source_connection_id is received [Transport 18.2]" \
            # --match "MUST send TRANSPORT_PARAMETER_ERROR if stateless_reset_token is received [Transport 18.2]" \
            # --match "MUST send TRANSPORT_PARAMETER_ERROR if max_udp_payload_size < 1200 [Transport 7.4 and 18.2]" \
            # --match "MUST send TRANSPORT_PARAMETER_ERROR if ack_delay_exponen > 20 [Transport 7.4 and 18.2]" \
            # --match "MUST send TRANSPORT_PARAMETER_ERROR if max_ack_delay >= 2^14 [Transport 7.4 and 18.2]" \
            # --match "MUST send no_application_protocol TLS alert if no application protocols are supported [TLS 8.1]" \


