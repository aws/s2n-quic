diff --git a/certs.sh b/certs.sh
index f7c19f5..4b5eccc 100755
--- a/certs.sh
+++ b/certs.sh
@@ -63,6 +63,6 @@ cp "$CERTDIR"/ca_"$CHAINLEN".key "$CERTDIR"/priv.key
 # combine certificates
 for i in $(seq "$CHAINLEN" -1 1); do
   cat "$CERTDIR"/cert_"$i".pem >>"$CERTDIR"/cert.pem
-  rm "$CERTDIR"/cert_"$i".pem "$CERTDIR"/ca_"$i".key
+  rm -f "$CERTDIR"/cert_"$i".pem "$CERTDIR"/ca_"$i".key
 done
 rm -f "$CERTDIR"/*.srl "$CERTDIR"/ca_0.key "$CERTDIR"/cert.csr
diff --git a/docker-compose.yml b/docker-compose.yml
index 8646582..cd151ea 100644
--- a/docker-compose.yml
+++ b/docker-compose.yml
@@ -1,6 +1,6 @@
 services:
   sim:
-    image: martenseemann/quic-network-simulator
+    image: wesleyrosenblum/quic-network-simulator
     container_name: sim
     hostname: sim
     stdin_open: true
@@ -41,6 +41,7 @@ services:
       - SSLKEYLOGFILE=/logs/keys.log
       - QLOGDIR=/logs/qlog/
       - TESTCASE=$TESTCASE_SERVER
+      - TEST_TYPE=$TEST_TYPE
     depends_on:
       - sim
     cap_add:
@@ -72,6 +73,7 @@ services:
       - SSLKEYLOGFILE=/logs/keys.log
       - QLOGDIR=/logs/qlog/
       - TESTCASE=$TESTCASE_CLIENT
+      - TEST_TYPE=$TEST_TYPE
       - REQUESTS=$REQUESTS
     depends_on:
       - sim
diff --git a/implementations.json b/implementations.json
index 7df33f8..527d7ee 100644
--- a/implementations.json
+++ b/implementations.json
@@ -74,8 +74,13 @@
     "url": "https://github.com/quinn-rs/quinn",
     "role": "both"
   },
+  "s2n-quic-rustls": {
+    "image": "aws/s2n-quic-qns-rustls:latest",
+    "url": "https://github.com/aws/s2n-quic",
+    "role": "both"
+  },
   "s2n-quic": {
-    "image": "ghcr.io/aws/s2n-quic/s2n-quic-qns:latest",
+    "image": "aws/s2n-quic-qns:latest",
     "url": "https://github.com/aws/s2n-quic",
     "role": "both"
   },
diff --git a/interop.py b/interop.py
index d6b27ce..a17ab66 100644
--- a/interop.py
+++ b/interop.py
@@ -126,6 +126,7 @@ class InteropRunner:
         cmd = (
             "CERTS=" + certs_dir.name + " "
             "TESTCASE_CLIENT=" + random_string(6) + " "
+            "TEST_TYPE=TEST "
             "SERVER_LOGS=/dev/null "
             "CLIENT_LOGS=" + client_log_dir.name + " "
             "WWW=" + www_dir.name + " "
@@ -153,6 +154,7 @@ class InteropRunner:
         cmd = (
             "CERTS=" + certs_dir.name + " "
             "TESTCASE_SERVER=" + random_string(6) + " "
+            "TEST_TYPE=TEST "
             "SERVER_LOGS=" + server_log_dir.name + " "
             "CLIENT_LOGS=/dev/null "
             "WWW=" + www_dir.name + " "
@@ -408,6 +410,7 @@ class InteropRunner:
             "CERTS=" + testcase.certs_dir() + " "
             "TESTCASE_SERVER=" + testcase.testname(Perspective.SERVER) + " "
             "TESTCASE_CLIENT=" + testcase.testname(Perspective.CLIENT) + " "
+            "TEST_TYPE=" + testcase.test_type() + " "
             "WWW=" + testcase.www_dir() + " "
             "DOWNLOADS=" + testcase.download_dir() + " "
             "SERVER_LOGS=" + server_log_dir.name + " "
@@ -524,9 +527,14 @@ class InteropRunner:
         logging.debug(values)
         res = MeasurementResult()
         res.result = TestResult.SUCCEEDED
-        res.details = "{:.0f} (± {:.0f}) {}".format(
-            statistics.mean(values), statistics.stdev(values), test.unit()
-        )
+        if len(values) == 1:
+            res.details = "{:.0f} {}".format(
+                values[0], test.unit()
+            )
+        else:
+            res.details = "{:.0f} (± {:.0f}) {}".format(
+                statistics.mean(values), statistics.stdev(values), test.unit()
+            )
         return res
 
     def run(self):
@@ -541,23 +549,26 @@ class InteropRunner:
                 client,
                 self._implementations[client]["image"],
             )
-            if not (
-                self._check_impl_is_compliant(server)
-                and self._check_impl_is_compliant(client)
-            ):
-                logging.info("Not compliant, skipping")
-                continue
 
+            transfer_succeeded = True
             # run the test cases
             for testcase in self._tests:
                 status = self._run_testcase(server, client, testcase)
                 self.test_results[server][client][testcase] = status
                 if status == TestResult.FAILED:
                     nr_failed += 1
+                    if testcase == testcases.TestCaseTransfer:
+                        transfer_succeeded = False
 
             # run the measurements
             for measurement in self._measurements:
-                res = self._run_measurement(server, client, measurement)
+                if transfer_succeeded:
+                    res = self._run_measurement(server, client, measurement)
+                else:
+                    logging.debug("Skipping measurements as Transfer testcase was unsuccessful")
+                    res = MeasurementResult()
+                    res.result = TestResult.UNSUPPORTED
+                    res.details = "Skipping measurements as Transfer testcase was unsuccessful"
                 self.measurement_results[server][client][measurement] = res
 
         self._postprocess_results()
diff --git a/pull.py b/pull.py
index c2d6d1f..844bbd5 100644
--- a/pull.py
+++ b/pull.py
@@ -5,7 +5,7 @@ import sys
 from implementations import IMPLEMENTATIONS
 
 print("Pulling the simulator...")
-os.system("docker pull martenseemann/quic-network-simulator")
+os.system("docker pull wesleyrosenblum/quic-network-simulator")
 
 print("\nPulling the iperf endpoint...")
 os.system("docker pull martenseemann/quic-interop-iperf-endpoint")
diff --git a/requirements.txt b/requirements.txt
index 131cf94..ce5960d 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,4 +1,4 @@
 pycryptodome
 termcolor
 prettytable
-pyshark
\ No newline at end of file
+pyshark==0.5.2
\ No newline at end of file
diff --git a/run.py b/run.py
index 462f8df..5eb0cbb 100755
--- a/run.py
+++ b/run.py
@@ -180,4 +180,4 @@ def main():
 
 
 if __name__ == "__main__":
-    sys.exit(main())
+    main()
diff --git a/testcases.py b/testcases.py
index bda5690..b5dd3f1 100644
--- a/testcases.py
+++ b/testcases.py
@@ -98,6 +98,10 @@ class TestCase(abc.ABC):
         """The name of testcase presented to the endpoint Docker images"""
         return self.name()
 
+    @staticmethod
+    def test_type() -> str:
+        return "TEST"
+
     @staticmethod
     def scenario() -> str:
         """Scenario for the ns3 simulator"""
@@ -1239,10 +1243,14 @@ class TestCasePortRebinding(TestCaseTransfer):
         ]
         return self._files
 
+    @staticmethod
+    def test_type() -> str:
+        return "TEST"
+
     @staticmethod
     def scenario() -> str:
         """Scenario for the ns3 simulator"""
-        return "rebind --delay=15ms --bandwidth=10Mbps --queue=25 --first-rebind=1s --rebind-freq=5s"
+        return "rebind --delay=15ms --bandwidth=10Mbps --queue=25 --first-rebind=2s --rebind-freq=5s"
 
     @staticmethod
     def _addr(p: List, which: str) -> str:
@@ -1310,7 +1318,7 @@ class TestCasePortRebinding(TestCaseTransfer):
         responses = list(
             set(
                 getattr(p["quic"], "path_response.data")
-                for p in tr_client
+                for p in tr_client2server
                 if hasattr(p["quic"], "path_response.data")
             )
         )
@@ -1328,6 +1336,10 @@ class TestCaseAddressRebinding(TestCasePortRebinding):
     def name():
         return "rebind-addr"
 
+    @staticmethod
+    def test_type() -> str:
+        return "MEASUREMENT"
+
     @staticmethod
     def abbreviation():
         return "BA"
@@ -1616,7 +1628,7 @@ class MeasurementGoodput(Measurement):
 
     @staticmethod
     def repetitions() -> int:
-        return 5
+        return 1
 
     def get_paths(self):
         self._files = [self._generate_random_file(self.FILESIZE)]
@@ -1688,7 +1700,7 @@ TESTCASES = [
     TestCaseMultiplexing,
     TestCaseRetry,
     TestCaseResumption,
-    TestCaseZeroRTT,
+    # TestCaseZeroRTT,
     TestCaseHTTP3,
     TestCaseBlackhole,
     TestCaseKeyUpdate,
@@ -1699,7 +1711,8 @@ TESTCASES = [
     TestCaseHandshakeCorruption,
     TestCaseTransferCorruption,
     TestCaseIPv6,
-    TestCaseV2,
+    # s2n-quic doesn't currently support v2
+    # TestCaseV2,
     TestCasePortRebinding,
     TestCaseAddressRebinding,
     TestCaseConnectionMigration,
