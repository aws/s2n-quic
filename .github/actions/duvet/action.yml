name: 'Duvet'
description: 'Uses Duvet to generate a compliance report and uploads it to S3'
inputs:
  report-script:
    description: 'Path to script that generates a Duvet report'
    required: true
  report-path:
    description: 'Path to generated Duvet report output'
    required: false
  aws-access-key-id:
    description: 'AWS access key ID with S3 permissions'
    required: true
  aws-secret-access-key:
    description: 'AWS secret key'
    required: true
  aws-s3-bucket-name:
    description: 'Destination S3 bucket name for duvet reports'
    required: true
  aws-s3-region:
    description: 'S3 bucket region'
    required: true
  cdn:
    description: 'Prefix the S3 URL with a CDN'
    required: false
  s2n-quic-dir:
    description: 'Path to the directory where s2n-quic is cloned'
    default: ${{ github.workspace }}
    required: false
runs:
  using: "composite"
  steps:
    - uses: actions-rs/toolchain@v1.0.7
      id: toolchain
      with:
        toolchain: stable
        override: true

    - uses: camshaft/rust-cache@v1

    - name: Clean up cache
      working-directory: ${{ inputs.s2n-quic-dir }}
      run: |
        rm -f target/release/duvet
        rm -f common/duvet/target/release/duvet
      shell: bash

    - name: Cache duvet
      uses: actions/cache@v3.0.3
      continue-on-error: true
      with:
        path: ${{ inputs.s2n-quic-dir }}/target/release/duvet
        key: ${{ runner.os }}-${{ steps.toolchain.outputs.rustc_hash }}-${{ github.job }}-duvet-${{ hashFiles(format('{0}/**/Cargo.lock', inputs.s2n-quic-dir)) }}-${{ hashFiles(format('{0}/common/duvet/**', inputs.s2n-quic-dir)) }}

    - name: Install duvet
      working-directory: ${{ inputs.s2n-quic-dir }}/common/duvet
      run: |
        if [ ! -f ../../target/release/duvet ]; then
          mkdir -p ../../target/release
          cargo build --release
          cp target/release/duvet ../../target/release/duvet
        fi
        
        echo "${{ inputs.s2n-quic-dir }}/target/release" >> $GITHUB_PATH
      shell: bash

    - name: Generate Duvet report
      run: ${{ inputs.report-script }} ${{ github.sha }}
      shell: bash

    - uses: aws-actions/configure-aws-credentials@v1.6.1
      if: github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key}}
        aws-region: ${{ inputs.aws-s3-region }}

    - name: Upload to S3
      if: github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name
      id: s3
      run: |
        if [ -n "${{ inputs.report-path }}" ]; then
          REPORT_PATH="${{ inputs.report-path }}"
        else
          REPORT_PATH=$(dirname "${{ inputs.report-script }}")/report.html
        fi
        
        TARGET="${{ github.sha }}/compliance.html"
        aws s3 cp "$REPORT_PATH" "s3://${{ inputs.aws-s3-bucket-name }}/$TARGET" --acl private --follow-symlinks
        
        if [ -n "${{ inputs.cdn }}" ]; then
          PREFIX="${{ inputs.cdn }}"
        else
          PREFIX="https://${{ inputs.aws-s3-bucket-name }}.s3.amazonaws.com"
        fi
        URL="$PREFIX/$TARGET"
        
        echo "::set-output name=URL::$URL"
      shell: bash

    - uses: ouzi-dev/commit-status-updater@v1.1.2
      if: github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name
      with:
        name: "compliance / report"
        status: "success"
        url: ${{ steps.s3.outputs.URL }}
