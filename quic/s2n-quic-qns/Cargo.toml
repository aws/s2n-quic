[package]
name = "s2n-quic-qns"
# this in an unpublished internal crate so the version should not be changed
version = "0.1.0"
authors = ["AWS s2n"]
edition = "2021"
rust-version = "1.63"
license = "Apache-2.0"
publish = false

[features]
default = []
xdp = ["s2n-quic/unstable-provider-io-xdp", "aya", "aya-log"]

[dependencies]
# TODO use the crates.io version once https://github.com/aya-rs/aya/pull/527 is merged
aya = { git = "https://github.com/camshaft/aya", branch = "xdpmaps", optional = true }
aya-log = { git = "https://github.com/camshaft/aya", branch = "xdpmaps", optional = true }
bytes = { version = "1", default-features = false }
cfg-if = "1"
futures = "0.3"
http = "0.2"
humansize = "2"
lru = "0.10"
openssl-sys = { version = "0.9", features = ["vendored"] }
rand = "0.8"
# dangerous_configuration is used to allow for cert verification to be disabled for the amplification limit interop test
rustls = { version = "0.21", features = ["dangerous_configuration", "quic"] }
s2n-codec = { path = "../../common/s2n-codec" }
s2n-quic-core = { path = "../s2n-quic-core", features = ["testing"] }
s2n-quic-h3 = { path = "../s2n-quic-h3" }
structopt = "0.3"
tokio = { version = "1", features = ["full"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
url = "2"
regex = { version = "1", features = ["unicode"] }

[target.'cfg(unix)'.dependencies]
s2n-quic = { path = "../s2n-quic", features = ["provider-event-console-perf", "provider-event-tracing", "provider-tls-rustls", "provider-tls-s2n"] }

[target.'cfg(not(unix))'.dependencies]
s2n-quic = { path = "../s2n-quic", features = ["provider-event-console-perf", "provider-event-tracing", "provider-tls-rustls"] }

# the mimalloc build is currently broken on android
[target.'cfg(not(target_os = "android"))'.dependencies]
mimalloc = { version = "0.1", default-features = false }

# we don't use openssl-sys directly; it's just here to pin and vendor in dev
[package.metadata.cargo-udeps.ignore]
normal = [ "openssl-sys" ]

# Use unstable s2n-quic features
# unstable_client_hello and unstable_resumption use s2n-tls, and thus are only enabled for unix platforms
[target.'cfg(all(any(s2n_quic_unstable, s2n_internal_dev), unix))'.dependencies]
s2n-quic = { path = "../s2n-quic", features = ["unstable_client_hello", "unstable_resumption"] }
[target.'cfg(any(s2n_quic_unstable, s2n_internal_dev))'.dependencies]
s2n-quic = { path = "../s2n-quic", features = ["unstable-provider-packet-interceptor"] }